function output = SPFull_preprocRCS(p_data, str_session, str_device_curr, preprocCfg)
%% call ProcessRCS

pathInFull  = fullfile(p_data, str_session, str_device_curr);

% sanity check
if exist(pathInFull, 'dir') ~= 7
    error("The input directory should exist")
end

fprintf('Loading %s...\n', pathInFull)

[unifiedDerivedTimes,...
    timeDomainData, timeDomainData_onlyTimeVariables, timeDomain_timeVariableNames,...
    AccelData, AccelData_onlyTimeVariables, Accel_timeVariableNames,...
    PowerData, PowerData_onlyTimeVariables, Power_timeVariableNames,...
    FFTData, FFTData_onlyTimeVariables, FFT_timeVariableNames,...
    AdaptiveData, AdaptiveData_onlyTimeVariables, Adaptive_timeVariableNames,...
    timeDomainSettings, powerSettings, fftSettings, eventLogTable,...
    metaData, stimSettingsOut, stimMetaData, stimLogSettings,...
    DetectorSettings, AdaptiveStimSettings, AdaptiveEmbeddedRuns_StimSettings,...
    versionInfo] = ProcessRCS(pathInFull, 3);


%% Now load important meta data

% loading all metadata
output = SP_preprocAllMetaData(metaData, timeDomainData, timeDomainSettings, ...
    FFTData, fftSettings, PowerData, powerSettings, AdaptiveData, ...
    AdaptiveEmbeddedRuns_StimSettings, DetectorSettings, stimLogSettings, ...
    eventLogTable, pathInFull, preprocCfg.metaData.bool_aDBS, ...
    'strStep', preprocCfg.metaData.strStep, ...
    'strRound', preprocCfg.metaData.strRound, ...
    'boolCheckTDData', preprocCfg.metaData.boolCheckTDData, ...
    'boolReverseNonActiveLD', preprocCfg.metaData.boolReverseNonActiveLD, ...
    'boolGroupDOnly', preprocCfg.metaData.boolGroupDOnly, ...
    'boolCheckRampTime', preprocCfg.metaData.boolCheckRampTime, ...
    'stimAmp', preprocCfg.metaData.stimAmp);


%% Preprocess time domain data

output.rawData = SP_preprocTD(timeDomainData, output.metaData, ...
    preprocCfg);


%% Preprocess power data

output = SP_preprocPB(PowerData, output, cfg);


%% finally obtain the LD information

output = SP_preprocLD(AdaptiveData, output, preprocCfg);
fprintf('\n');


end
